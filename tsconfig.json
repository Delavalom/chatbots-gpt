{
  "compilerOptions": {
    /* Language and Environment */
    "target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "moduleDetection": "auto" /* Control what method is used to detect module-format JS files. */,

    /* Modules */
    "module": "NodeNext" /* Specify what module code is generated. */,
    "moduleResolution": "NodeNext" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "baseUrl": "./",
    "paths": {
      "~/*": ["./src/*"]
    } /* Specify the base directory to resolve non-relative module names. */,
    "resolveJsonModule": true /* Enable importing .json files. */,

    /* Emit */
    "outDir": "./dist" /* Specify an output folder for all emitted files. */,
    "removeComments": true /* Disable emitting comments. */,
    "noEmitOnError": false /* Disable emitting files if any type checking errors are reported. */,

    /* Interop Constraints */
    "isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,

    /* Type Checking */

    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
    "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
    "useUnknownInCatchVariables": true /* Default catch clause variables as 'unknown' instead of 'any'. */,
    "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
    "allowUnreachableCode": false /* Disable error reporting for unreachable code. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "ts-node": {
    "esm": true
  }
}
